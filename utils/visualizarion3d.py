# Evaluate MLP3D models generated by the GPT model.
# Visualize the models in 3D.

import copy
from data.neural_field_datasets_shapenet import ModelTransform3D, ShapeNetDataset
from networks.mlp_models import MLP3D
from utils import sdf_meshing
import trimesh

res=512

def model_to_mesh(mlp: MLP3D):
    effective_file_name = "tmp.ply"
    v, f, sdf = sdf_meshing.create_mesh(
      mlp,
      effective_file_name,
      N=res,
      level=0
      if mlp.output_type in ["occ", "logits"]
      else 0,
    )
    if (
        "occ" in mlp.output_type
        or "logits" in mlp.output_type
    ):
        tmp = copy.deepcopy(f[:, 1])
        f[:, 1] = f[:, 2]
        f[:, 2] = tmp

    mesh = trimesh.Trimesh(v, f)
    pass

def visualize_model3d(mlp: MLP3D):
    pass


if __name__ == '__main__':
    
  shapeNetData = ShapeNetDataset("./datasets/plane_mlp_weights", transform=ModelTransform3D())

  # load first model and visualize
  visualize_model3d(shapeNetData[0][0])